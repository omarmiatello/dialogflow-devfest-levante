buildscript {
    ext.kotlin_version = '1.3.41'
    ext.appengine_version = '1.9.75'
    ext.appengine_plugin_version = '1.3.4'
    ext.gce_logback_version = '0.60.0-alpha'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'kotlinx-serialization'

repositories {
    google()
    jcenter()
    mavenCentral()
    // maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"
    
    // Ktor is a framework for building servers and clients in a connected system using powerful Kotlin programming language
    // implementation "io.ktor:ktor-server-servlet:$ktor_version"
    // implementation "io.ktor:ktor-html-builder:$ktor_version"
    
    // Actions on Google
    implementation 'com.google.actions:actions-on-google:1.+'

    // Firebase
    implementation 'com.google.cloud:google-cloud-firestore:0.81.0-beta'
//    implementation 'com.google.firebase:firebase-admin:6.8.1'
//    implementation 'com.google.api-client:google-api-client-appengine:1.25.0'
    
    // Utility
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'


    // Google App Engine
    implementation "com.google.api-client:google-api-client-appengine:1.27.0"
    implementation "com.google.appengine:appengine-api-1.0-sdk:+"
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile "com.google.appengine:appengine:$appengine_version"
    // compile "com.google.cloud:google-cloud-logging-logback:$gce_logback_version"

    // Test
    testImplementation 'junit:junit:4.12'
}

appengine {
    // Deploy configuration
    deploy {
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task run(dependsOn: appengineRun)